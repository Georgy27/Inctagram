// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(uuid())
  username          String             @unique
  email             String             @unique
  hash              String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  passwordRecovery  PasswordRecovery?
  emailConfirmation EmailConfirmation?
  deviceSession     DeviceSession[]
}

model Token {
  accessTokenHash  String
  refreshTokenHash String
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  deviceSession    DeviceSession? @relation(fields: [deviceSessionId], references: [deviceId], onDelete: Cascade)
  deviceSessionId  String         @unique
}

model DeviceSession {
  ip             String
  deviceName     String
  createdAt      DateTime @default(now())
  lastActiveDate DateTime @updatedAt
  deviceId       String   @unique
  user           User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String?
  token          Token?
}

model PasswordRecovery {
  recoveryCode   String?
  expirationDate String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String   @unique
}

model EmailConfirmation {
  confirmationCode String
  expirationDate   String
  isConfirmed      Boolean
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  user             User     @relation(fields: [userEmail], references: [email], onDelete: Cascade)
  userEmail        String   @unique
}
